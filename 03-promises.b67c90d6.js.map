{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,QAASC,SAASC,cAAc,UA0ClC,SAASC,EAAkBC,EAAcC,GApCzC,IAAuBC,EAAUC,GAAVD,EAsCPF,EAtCiBG,EAsCHF,EApCrB,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,KA6BRQ,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBV,EAAAmB,OAAOC,QAAQ,uBAAqBX,QAAiBC,MAAU,IAEhEW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MACnBV,EAAAmB,OAAOG,QAAQ,sBAAoBb,QAAeC,MAAU,G,CA9CjER,EAAKC,QAAQoB,UAAUC,IAAI,gBAC3BtB,EAAKC,QAAQsB,iBAAiB,UAiB9B,SAAyBC,GAEvBA,EAAEC,iBACF,MAAMjB,MAAEA,EAAKkB,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAAcC,SAC1CC,EAAiBC,OAAOJ,EAAOK,OAAS,EACxCC,EAAgBF,OAAOL,EAAKM,QAMpC,SAAiCE,EAAgBD,EAAeH,GAE9D1B,EAAkB,EAAG8B,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAgBK,GAAK,EAEvC/B,EAAkB+B,EADlBD,GAAkBD,E,CARpBG,CADqBL,OAAOvB,EAAMwB,OACMC,EAAeH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formBox: document.querySelector('.form'),\n}\n\nrefs.formBox.classList.add('js-container');\nrefs.formBox.addEventListener('submit', hadlerBtnPromis);\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n};\n\nfunction hadlerBtnPromis(e) {\n\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  const positionPromis = Number(amount.value) + 1;\n  const stepTimeValue = Number(step.value)\n  let stepTimePromis = Number(delay.value);\n  numberChallengePromises(stepTimePromis, stepTimeValue, positionPromis)\n\n};\n\nfunction numberChallengePromises(stepTimePromis, stepTimeValue, positionPromis) {\n\n  challengePromises(1, stepTimePromis);\n  for (let i = 2; i < positionPromis; i += 1) {\n    stepTimePromis += stepTimeValue;\n    challengePromises(i, stepTimePromis);\n\n  };\n};\n\nfunction challengePromises(numberPromis, time) {\n\n  createPromise(numberPromis, time)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n};\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formBox","document","querySelector","$47d4ff9957288465$var$challengePromises","numberPromis","time","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure","classList","add","addEventListener","e","preventDefault","step","amount","currentTarget","elements","positionPromis","Number","value","stepTimeValue","stepTimePromis","i","$47d4ff9957288465$var$numberChallengePromises"],"version":3,"file":"03-promises.b67c90d6.js.map"}