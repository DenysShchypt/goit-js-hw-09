{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,UA0ClC,SAASC,EAAkBC,EAAcC,GApCzC,IAAuBC,EAAUC,GAAVD,EAsCPF,EAtCiBG,EAsCHF,EApCrB,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KA6BFQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBV,EAAAoB,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAE9Da,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACnBV,EAAAoB,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IA9C/DR,EAAKC,QAAQsB,UAAUC,IAAI,gBAC3BxB,EAAKC,QAAQwB,iBAAiB,UAiB9B,SAAyBC,GAEvBA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCtB,EAAwBoB,EAAxBpB,MAAOuB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACfC,EAAiBC,OAAOF,EAAOG,OAAS,EACxCC,EAAgBF,OAAOH,EAAKI,QAMpC,SAAiCE,EAAgBD,EAAeH,GAE9D7B,EAAkB,EAAGiC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAgBK,GAAK,EAEvClC,EAAkBkC,EADlBD,GAAkBD,E,CARpBG,CADqBL,OAAO1B,EAAM2B,OACMC,EAAeH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formBox: document.querySelector('.form'),\n}\n\nrefs.formBox.classList.add('js-container');\nrefs.formBox.addEventListener('submit', hadlerBtnPromis);\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n};\n\nfunction hadlerBtnPromis(e) {\n\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  const positionPromis = Number(amount.value) + 1;\n  const stepTimeValue = Number(step.value)\n  let stepTimePromis = Number(delay.value);\n  numberChallengePromises(stepTimePromis, stepTimeValue, positionPromis)\n\n};\n\nfunction numberChallengePromises(stepTimePromis, stepTimeValue, positionPromis) {\n\n  challengePromises(1, stepTimePromis);\n  for (let i = 2; i < positionPromis; i += 1) {\n    stepTimePromis += stepTimeValue;\n    challengePromises(i, stepTimePromis);\n\n  };\n};\n\nfunction challengePromises(numberPromis, time) {\n\n  createPromise(numberPromis, time)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formBox","document","querySelector","$ce04d3a99e08e73b$var$challengePromises","numberPromis","time","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","Notify","success","concat","catch","failure","classList","add","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","positionPromis","Number","value","stepTimeValue","stepTimePromis","i","$ce04d3a99e08e73b$var$numberChallengePromises"],"version":3,"file":"03-promises.05632d86.js.map"}